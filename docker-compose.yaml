services:
  db:
  pgadmin:
    depends_on:
      - db
  backend:
    depends_on:
      - db
  client:
    depends_on:
      - backend

services:
  db:
    container_name: db_container
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "${DB_PORT}:5432"
    networks:
      - db_network

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    env_file:
      - .env
    ports:
      - "${PGADMIN_PORT}:80"  
    volumes:
       - pgadmin:/var/lib/pgadmin
    networks:
      - db_network

  backend:
    container_name: back_container
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "${BACKEND_PORT}:8000"
    networks:
      - db_network
      - app_network

  client:
    container_name: front_container
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - ${CLIENT_PORT}:3000
    volumes:
    #  - /app/node_modules
      - ./client:/app
    networks:
      - app_network

networks:
  app_network:
    driver: bridge
  db_network:
    driver: bridge

volumes:
  db:
  pgadmin:
  backend:
  client:
